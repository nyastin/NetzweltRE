 /* const Login = () => {
    const [isSubmitSuccess, setIsSubmitSuccess] = useState(false);

    const formik = useFormik({
      initialValues: {
        username: "",
        password: "",
      },
      validationSchema: Yup.object({
        username: Yup.string().required("Username is required."),
        password: Yup.string()
          .min(5, "Enter at least 8 characters.")
          .required("Please enter your password."),
      }),
      onSubmit: (values) => {
        console.log(values);
        setIsSubmitSuccess(true);
      },
    });

    return (
      <div className="container">
        <div>
            <form /*onSubmit={formik.handleSubmit}>
              <h2>Login</h2>
              <TextField
                name="username"
                type="text"
                placeholder="Username"
                className="textField"
                InputProps={{
                  startAdornment: (
                    <InputAdornment>
                      <IconButton>
                        <Person />
                      </IconButton>
                    </InputAdornment>
                  ),
                }}
                /*onChange={formik.handleChange}
                onBlur={formik.handleBlur}
                value={formik.values.username}
              />

              {formik.touched.username && formik.errors.username ? (
                <div className="error_msg">{formik.errors.username}</div>
              ) : null}
              

              <TextField
                name="password"
                type="password"
                placeholder="Password"
                className="textField"
                InputProps={{
                  startAdornment: (
                    <InputAdornment>
                      <IconButton>
                        <Password />
                      </IconButton>
                    </InputAdornment>
                  ),
                }}
                onChange={formik.handleChange}
                onBlur={formik.handleBlur}
                value={formik.values.password}
              />
              {formik.touched.password && formik.errors.password ? (
                <div className="error_msg">{formik.errors.password}</div>
              ) : null}
          

              <br></br>
              <br></br>
              <button type="submit">Login</button>
            </form>
          )}
        </div>
      </div>
    );
  };

export default Login;*/